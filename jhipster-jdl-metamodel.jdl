relationship ManyToMany {
	LandscapeView{flows(alias)} to FunctionalFlow{landscape(diagramName) required}
}
relationship ManyToMany {
	FunctionalFlow{interfaces(alias)} to FlowInterface{functionalFlows(alias)}
}
relationship ManyToOne {
	FlowInterface{source(name) required} to Application
	FlowInterface{target(name) required} to Application
	FlowInterface{sourceComponent(name)} to ApplicationComponent
	FlowInterface{targetComponent(name)} to ApplicationComponent
}

relationship OneToMany {
	FlowInterface{dataFlows} to DataFlow{flowInterface(alias) required}
}

relationship ManyToMany {
	DataFlow{functionalFlows(alias) required} to FunctionalFlow{dataFlows}
}


relationship ManyToOne {
	ApplicationComponent{application(name) required} to Application{applicationsList(name)}
}


// Ownership for Lanscape && Interfaces
// Functional Flows ownership inheried from LanscapeView
relationship ManyToOne {
	LandscapeView{owner(name)} to Owner
	FlowInterface{owner(name)} to Owner
    Application{owner(name)} to Owner
}

relationship OneToMany {
	DataFlow{events} to EventData{dataFlow}
}


entity LandscapeView {
    viewpoint ViewPoint
	diagramName String // Example ADD_Payment_Landscape
    compressedDrawXML TextBlob
    compressedDrawSVG TextBlob
}
entity Owner {
	name String
}

entity FunctionalFlow {
    alias String
    description String maxlength(1000)
    comment String
    status String
    documentationURL String
    documentationURL2 String    
    startDate LocalDate
    endDate LocalDate
}

entity FlowInterface {
    alias String pattern(/^[A-Z]{3}-[0-9]{2,4}$/)
    protocol Protocol
    status String
    documentationURL String
    documentationURL2 String
    startDate LocalDate
    endDate LocalDate
}

entity Application {
	alias String pattern(/^HPX\.CMP\.[0-9]{8}$/)
	name String,
    description String maxlength(1000)
    type ApplicationType
	technology String
    comment String 
    documentationURL String
    startDate LocalDate
    endDate LocalDate
}

entity DataFlow {
    frequency Frequency
    format Format
    type FlowType
    description String maxlength(1000)
    resourceName String /** TOPIC name for event, FileName for Files*/
    contractURL String /** Swagger or XSD URL */
    documentationURL String
    startDate LocalDate
    endDate LocalDate    
}

entity EventData {
    name String
    contractURL String
    documentationURL String
    startDate LocalDate
    endDate LocalDate
}

entity ApplicationComponent {
	name String,
    description String maxlength(1000),
    type ApplicationType
    technology String 
    comment String 
    documentationURL String
    startDate LocalDate
    endDate LocalDate
}

enum ViewPoint {
  APPLICATION_LANDSCAPE
}

enum Protocol {
  API
  ESB
  BATCH_FILE
  BATCH_FILE_MFT
  EVENT
  O2O_NODS
  T24_API
  T24_NOTIF
  T24_ESB
  T24_DATA_SYNC_OUT
  T24_DATA_SYNC_IN
  T24_FILE_IN
  T24_TAP
  T24_BATCH_IN
  T24_BATCH_OUT
  T24_DIRECT_IN
  T24_DIRECT_JMS
  SOAP
  DEEPLINK
  MQ
  MANUAL
  RPA
  DIRECT_QUEUE_OVER_MQ
  MAIL_FILE
  LINK
  N_A
  HTTP_DIRECT
  HTTP_REDIRECT
  INDIRECT_THROUGH_CUSTOMER_BROWSER
  ETL_ODI
  OUTLOOK_WIDGET
  BATCH_FILE_THROUGH_IMFT
  NATIVE
  FILE
  NAS  
  FILE_ZIP_MFT_NAS
  BATCH_FILE_THROUGH_MFT
}

enum Frequency {
	DAILY
    WEEKLY
    ON_DEMAND
}

enum Format {
	XML
    JSON
    CSV
}

enum FlowType {
	FILE
    EVENT
    API
}

enum ApplicationType {
	MICROSERVICE
    EXTERNAL
    JAVA
    PACKAGE
    INFRASTRUCTURE
    GINKO
    FRONT
}

// ADD Helper for import, not part of main model

entity ApplicationImport(tmp_import_application_import) {
	importId String
    excelFileName String
    idFromExcel String,
	name String,
    description String 
    type String
	technology String
    comment String 
    importStatus ImportStatus
    importStatusMessage String
    existingApplicationID String // ID of Application when importStatus = EXISINT or UPDATED
}


enum ImportStatus {
    NEW
	EXISTING
    UPDATED
    ERROR
}


entity FlowImport(tmp_import_flows) {
    idFlowFromExcel String
    flowAlias String
    sourceElement String
    targetElement String
    description String
    integrationPattern String
  	frequency String
  	format String
	swagger String
  	sourceURLDocumentation String
  	targetURLDocumentation String
  	sourceDocumentationStatus String
  	targetDocumentationStatus String
  	flowStatus String
  	comment String
  	documentName String
    importInterfaceStatus ImportStatus
    importFunctionalFlowStatus ImportStatus
	importDataFlowStatus ImportStatus
	importStatusMessage String
}


